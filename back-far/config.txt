ahora quiero que me ayudes a configurar un microservicios en javascript con express, en la tengo estos mudulos, users, equipos, trabajos
y de la cuales los archivos que supongo que se deben configurar son el server.js y app.js te mandare ambos archivos de cada modulo
que no esta configurado no se como hacerlo y quiero hacerlo con docker
//Modulo users
const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const authRoutes = require('./routes/auth.routes');
const userRoutes = require('./routes/user.routes');
const teamRoutes = require('./routes/team.routes');
const roleRoutes = require('./routes/roles.routes');
const areaRoutes = require('./routes/area.routes');
require('dotenv').config();

const app = express();

// Configurar CORS antes de definir las rutas
app.use(cors({
origin: "[http://localhost:5174](http://localhost:5174)",
methods: \['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
credentials: true
}));
app.use(bodyParser.json());

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

app.use('/auth', authRoutes);
app.use('/users', userRoutes);
app.use('/api/teams', teamRoutes);
app.use("/auth/roles", roleRoutes);
app.use("/area", areaRoutes);
module.exports = app;
//server,js
const app = require('./app');
const express = require('express');
require('dotenv').config();

const PORT = process.env.PORT || 5000;

app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

app.listen(PORT, () => {
console.log(`ðŸš€ Server running on port ${PORT}`);
});

//Modulo de trabajos
const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const trabajosRoutes = require('./routes/trabajos.routes')
require('dotenv').config();

const app = express();

app.use(cors({
origin: "[http://localhost:5174](http://localhost:5174)",
methods: \['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
credentials: true
}));
app.use(bodyParser.json());

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

app.use('/trabajos', trabajosRoutes);

module.exports = app;

//server.js
const express = require('express');
const path = require('path');
const app = require('./app');
require('dotenv').config();

const PORT = process.env.PORT || 7000;

app.use('/uploads', express.static(path.join(\_\_dirname, '../uploads')));

app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

app.listen(PORT, () => {
console.log(` Server running on port ${PORT}`);
});
//equipos
const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const equipoRoutes = require('./routes/equipo.routes')
require('dotenv').config();

const app = express();

// Configurar CORS antes de definir las rutas
app.use(cors({
origin: "[http://localhost:5174](http://localhost:5174)",
methods: \['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
credentials: true
}));
app.use(bodyParser.json());

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

app.use('/equipos', equipoRoutes);

module.exports = app;
//serverjs
const express = require('express');
const path = require('path');
const app = require('./app');  // AsegÃºrate de importar `app`
require('dotenv').config();

const PORT = process.env.PORT || 4000;

// âœ… Servir archivos estÃ¡ticos desde `uploads/`
app.use('/uploads', express.static(path.join(\_\_dirname, '../uploads')));

app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

app.listen(PORT, () => {
console.log(`ðŸš€ Server running on port ${PORT}`);
console.log(`ðŸ“‚ Archivos estÃ¡ticos servidos desde: ${path.join(__dirname, '../uploads')}`);
});  independientemente cuando ejecuto cada uno funciona correctamente, pero entre los modulos no se comunican todavia
